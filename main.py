# main.py

from bot.tweet_generator import generate_tweet_with_number
from bot.zenn_generator import generate_zenn_weekly_article
from bot.scheduler_post import post_by_time
from bot.scheduler_collect import collect_and_analyze
from bot.utils import get_next_episode_number
from bot.note_writer import generate_detailed_note
from utils.google_sheet_logger import log_to_sheet

from datetime import datetime
import os

# --- Ë®≠ÂÆö ---
ENABLE_TWEET_ANALYSIS = datetime.today().weekday() == 6

# --- „Éá„Ç£„É¨„ÇØ„Éà„É™Á¢∫Ë™ç ---
os.makedirs("logs", exist_ok=True)
os.makedirs("articles", exist_ok=True)
os.makedirs("note_articles", exist_ok=True)
os.makedirs("generated/tweets/season_01", exist_ok=True)

def detect_time_of_day():
    hour = datetime.now().hour
    if 5 <= hour < 11:
        return "Êúù"
    elif 11 <= hour < 17:
        return "Êòº"
    else:
        return "Â§ú"


if __name__ == "__main__":
    print("====== üõ†Ô∏è BotËµ∑Âãï„É©„É≥„ÉÅ„É£„Éº ======")

    # ‚ë† GPT„ÉÑ„Ç§„Éº„ÉàÁîüÊàê & ‰øùÂ≠ò
    print("\n[1] GPT„ÉÑ„Ç§„Éº„ÉàÁîüÊàê")
    season = 1
    episode_number = get_next_episode_number()
    episode_id = f"S{season:02d}-{episode_number:03d}"
    time_of_day = detect_time_of_day()  # ‰ªªÊÑè„Å´Â§âÊõ¥ÂèØËÉΩ

    final_text = generate_tweet_with_number(episode_id, time_of_day)

    # ‚ë° Google„Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„Éà„Å´„É≠„Ç∞ÈÄÅ‰ø°
    today = datetime.now().strftime("%Y/%m/%d")
    note_url = f"https://note.com/famous_walrus484/n/{episode_id.lower()}"
    log_to_sheet(today, time_of_day, episode_id, final_text, note_url)

    # ‚ë¢ noteÂéüÁ®øÁîüÊàêÔºàÈÄ±Â†±Ôºâ
    print("\n[2] noteÂéüÁ®ø‰ΩúÊàêÔºàweekly_reportÔºâ")
    weekly_path = f"note_articles/weekly_report_{datetime.now().strftime('%Y%m%d')}.md"
    with open(weekly_path, "w", encoding="utf-8") as f:
        f.write(f"# ÈÄ±Â†±Ôºà{today}Ôºâ\n\n{final_text}\n\n---\nËá™ÂãïÊäïÁ®øBot„ÅÆÂãï‰Ωú„É≠„Ç∞‰ªò„Åç")
    print(f"[‚úÖ] ‰øùÂ≠òÂÆå‰∫Ü ‚Üí {weekly_path}")

    # ‚ë£ ‰∫∫Ê∞ó„ÉÑ„Ç§„Éº„Éà„ÅÆÂàÜÊûêÔºàÊØéÈÄ±Êó•Êõú„ÅÆ„ÅøÔºâ
    if ENABLE_TWEET_ANALYSIS:
        print("\n[4] „ÉÑ„Ç§„Éº„ÉàÂàÜÊûêÔºàÈÄ±Ê¨°Ôºâ")
        try:
            collect_and_analyze()
        except Exception as e:
            print("[ERROR] „ÉÑ„Ç§„Éº„ÉàÂàÜÊûê„Å´Â§±Êïó:", e)
    else:
        print("\n[4] „ÉÑ„Ç§„Éº„ÉàÂàÜÊûêÔºö‰ªäÈÄ±„ÅØ„Çπ„Ç≠„ÉÉ„ÉóÔºàÊó•Êõú„ÅÆ„ÅøÂÆüË°åÔºâ")

    # ‚ë§ ÊäïÁ®øBot„ÅÆÊäïÁ®øÔºà‰ªªÊÑè„Åß„ÉÜ„Çπ„ÉàÂÆüË°åÔºâ
    print("\n[5] ÊäïÁ®øBot„ÅÆ„ÉÜ„Çπ„ÉàÊäïÁ®øÔºà{time_of_day}Ôºâ")
    post_by_time("Êúù")

    # ‚ë• Ë©≥Á¥∞noteË®ò‰∫ã„ÇíËá™ÂãïÁîüÊàê„Éª‰øùÂ≠ò
    print("\n[6] noteÁî® Ë©≥Á¥∞ÂéüÁ®ø„ÅÆ‰øùÂ≠ò")
    generate_detailed_note(episode_id, final_text)

    print("\n[7] ZennÈÄ±Â†±„ÇíÁîüÊàê‰∏≠...")
    generate_zenn_weekly_article("‰ªäÈÄ±„ÇÇBot„ÅåÊ¥ªË∫ç„Åó„Åæ„Åó„ÅüÔºÅ")

    print("\n====== ‚úÖ „Åô„Åπ„Å¶„ÅÆÂá¶ÁêÜ„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü ======")
